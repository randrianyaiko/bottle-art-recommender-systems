name: Deploy Recommender System

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: eu-central-1
  TF_VERSION: 1.5.0
  COMMIT_SHA: latest

jobs:
  deploy-layers:
    name: Deploy Lambda Layers
    environment: dev
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[deploy-layers]')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Make scripts executable
      run: chmod +x scripts/*.sh

    - name: Build and Upload Layers
      run: cd scripts && ./build-layers.sh

  build-lambdas:
    name: Build Lambda Packages
    environment: dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [deploy-layers]   # waits if layers are being built, otherwise runs immediately
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Make scripts executable
      run: chmod +x scripts/*.sh

    - name: Build Lambda Packages
      run: ./scripts/build-lambda-zip.sh

  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    environment: dev
    needs: [build-lambdas, deploy-layers]
    if: always() && github.ref == 'refs/heads/master'  # run even if deploy-layers was skipped
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: |
        terraform plan \
          -var="authorizer_layer_version=${{ env.COMMIT_SHA }}" \
          -var="common_layer_version=${{ env.COMMIT_SHA }}" \
          -var="qdrant_url=${{ secrets.QDRANT_URL }}" \
          -var="qdrant_api_key=${{ secrets.QDRANT_API_KEY }}" \
          -var="jwt_secret=${{ secrets.JWT_SECRET }}"

    - name: Terraform Apply
      working-directory: terraform
      run: |
        terraform apply -auto-approve \
          -var="authorizer_layer_version=${{ env.COMMIT_SHA }}" \
          -var="common_layer_version=${{ env.COMMIT_SHA }}" \
          -var="qdrant_url=${{ secrets.QDRANT_URL }}" \
          -var="qdrant_api_key=${{ secrets.QDRANT_API_KEY }}" \
          -var="jwt_secret=${{ secrets.JWT_SECRET }}"
